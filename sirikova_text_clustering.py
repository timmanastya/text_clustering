# -*- coding: utf-8 -*-
"""Sirikova_text_clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1feyDJ2uetTfHybGZc5-8XUSVnlMTPkS5
"""

!pip install -U -q PyDrive
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials
# Authenticate and create the PyDrive client.
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

downloaded = drive.CreateFile({'id':'1w_8MMe6uIwTejIVOEp8o60oc71USmCLw'}) 
downloaded.GetContentFile('logs')

"""**Т.к. есть ограничение по оперативной памяти одновременно подгружаются только 17млн первых запросов. Они и использованы для анализа и фильтрации. **

---
"""

import pandas as pd
data = pd.DataFrame([i[:-1].split('\t') for i in open('logs').readlines()[1:17000000]], columns = ['text', 'data'])
print(data.shape)
data.head()

words_fwc = [ 'футбол', 'чемпионат','чм', 'матч', 'финал','полуфинал', '1 4', '1 2', '1 8']
words_fwatch = [ 'трансляция матча', 'трансляция чм', 'результаты чм', 'смотреть чм', 'смотреть россия','смотреть матч', 'смотреть чм', 'эфир матч', 'эфир чм','трансляция финал','трансляция футбол', 'смотреть футбол', 'запись футбол', 'запись игра','смотреть чемпионат']
words_fschedule = ['турнирная таблица', 'турнирная сетка', 'расписание чм', 'календарь футбол', 'календарь чм', 'календарь чемпионат' 'футбол турнирная таблица','чм турнирная таблица', 'чм турнирная сетка', 'футбол турнирная сетка',]
words_finfo = [ 'статистика матчей','счет футбол', 'счет матча', 'ход матча','счет игра', 'счет россия', 'промежуточные результаты', 'результаты футбол']
words_fplayers = [ 'статистика игроков', 'состав команд', 'статистика команд', 'футбольные игроки', 'футбольный тренер', 'cборная по футболу', 'дзюба', 'головин', 'пике', 'рональдо', "месси", 'акинфеев', 'салах', ]
words_fnews = [ 'новости футбола', 'комментарии футбол', 'обзор матча', 'аналитика чм', 'аналитика матча', 'обзор чм']

al = []
al.extend(words_fwc)
al.extend(words_fwatch)
al.extend(words_fschedule)
al.extend(words_finfo)
al.extend(words_fplayers)
al.extend(words_fnews)
labels = ['wc' for i in range(len(words_fwc))]+['watch' for i in range(len(words_fwatch))]+['schedule' for i in range(len(words_fschedule))]+['info' for i in range(len(words_finfo))]+['players' for i in range(len(words_fplayers))]+['news' for i in range(len(words_fnews))]
f_dict = list(zip(al, labels))
f_dict.sort(key=lambda t: len(t[0]), reverse=True)
f_dict[1:]

def filter(text):
  f = []
  for word, label in f_dict[1:]:
    if word in text:
      f.append(label)
  if len(f)!=0:
    return f[0]
  else:
    return 1
    
data['labels'] = data.text.apply(filter)

f_data = data[data.labels!=1]
print(f_data.shape)
f_data.head()

f_data.tail()

f_data = f_data.reset_index()
def d(x):
  s = x[:10].split('-')
  return s[1]+s[2]
f_data['d'] = f_data['data'].apply(d)
f_data.head()

pr_data = f_data[['labels', 'text']].groupby(['labels'])
for i, val in pr_data:
  print(i)
  print(set(val.text.tolist()[:250]))
  print('###########')

g_f_data = f_data[['d', 'labels']].groupby(['d', 'labels']).size().reset_index(name='counts')
kkk = g_f_data[g_f_data.counts>2]

gh = kkk.pivot(index='labels', columns='d', values='counts')
gh.head()

gh = gh.fillna(0.1)
gh = gh.reset_index()

x = [i for i in range(32)]
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure
figure(num=None, figsize=(18, 18), dpi=80, facecolor='w', edgecolor='k')
for indx,i in enumerate(gh.values):
  plt.plot(x, i[1:], '-o', label = i[0])
plt.xticks(x, (str(i[:2])+'.'+str(i[2:]) for i in gh.columns[1:]))
plt.legend()
plt.show()

"""**В первом графике видим распределение запросов по всем 6 группам.  Во втором 5 групп без "общей" группы всех запросов по тематике чм по футболу**

---
"""

x = [i for i in range(32)]
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure
figure(num=None, figsize=(17, 16), dpi=80, facecolor='w', edgecolor='k')
for indx,i in enumerate(gh.values[:-1]):
  plt.plot(x, i[1:], '-o', label = i[0])
plt.xticks(x, (str(i[:2])+'.'+str(i[2:]) for i in gh.columns[1:]))
plt.legend()
plt.show()

